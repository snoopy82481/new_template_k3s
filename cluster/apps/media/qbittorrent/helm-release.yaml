---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: downloads
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 0.1.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    image:
      repository: ghcr.io/onedr0p/qbittorrent
      tag: 4.4.3.1@sha256:b2af9e2d86f3c693cecba5dfca2d44d9cefda29e198039eae74ce8488c5eaf72
    hostname: qbittorrent
    podAnnotations:
      setGateway: "true"
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups:
        - 100
    settings:
      automaticPortSetup: false
    env:
      TZ: ${TZ}
      QBITTORRENT__PORT: &port 8080
      QBITTORRENT__BT_PORT: &port-bt 50413
    service:
      main:
        ports:
          http:
            port: *port
      bittorrent:
        enabled: true
        type: LoadBalancer
        ports:
          bittorrent:
            enabled: true
            port: *port-bt
            protocol: TCP
            targetPort: *port-bt
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: "{{ .Release.Name }}-tls"
            hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: qbittorrent-config-v1
      media:
        enabled: true
        type: nfs
        server: "truenas.${SECRET_DOMAIN}"
        path: /mnt/storage0/Data
        mountPath: /media
      backup:
        enabled: true
        type: nfs
        server: "truenas.${SECRET_DOMAIN}"
        path: /mnt/storage0/backup
        mountPath: /backup
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 6000Mi
